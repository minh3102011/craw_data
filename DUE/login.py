import requests
from bs4 import BeautifulSoup
from config import headers, payload_template
import urllib3
import urllib.parse
import os
import time
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

retry_strategy = Retry(
    total=3,  # Max 3 retries
    backoff_factor=1,  # Wait 1s, 2s, 4s between retries
    status_forcelist=[429, 500, 502, 503, 504],  # Retry on these status codes
    allowed_methods=["GET", "POST"]  # Retry for GET and POST
)

# List of username:password pairs
credentials_file = "due.txt"  # Path to the input file
try:
    with open(credentials_file, "r", encoding="utf-8") as f:
        credentials = f.read().strip().splitlines()[1:]  # Skip header (Username:Password)
except FileNotFoundError:
    print(f"‚ùå Error: {credentials_file} not found")
    exit(1)
except Exception as e:
    print(f"‚ùå Error reading {credentials_file}: {str(e)}")
    exit(1)
# Parse credentials into list of (username, password) tuples
credentials_list = [line.split(":", 1) for line in credentials if line.strip()]


# Create session to keep cookies
session = requests.Session()
adapter = HTTPAdapter(max_retries=retry_strategy)
session.mount("https://", adapter)
session.mount("http://", adapter)

# Login URL
url = "https://due.udn.vn/vi-vn/"

for username, password in credentials_list:
    print(f"\nProcessing account: {username}")
    try:
        # Step 1: Get login page to extract __VIEWSTATE, etc.
        res_get = session.get(url, headers=headers, verify=False)
        time.sleep(0.5)
        res_get.raise_for_status()
        soup = BeautifulSoup(res_get.text, "html.parser")

        # Find hidden inputs in the form
        viewstate = soup.find("input", {"name": "__VIEWSTATE"})
        viewstategen = soup.find("input", {"name": "__VIEWSTATEGENERATOR"})
        eventvalidation = soup.find("input", {"name": "__EVENTVALIDATION"})

        # Step 2: Prepare payload from form
        payload = payload_template.copy()
        payload["__VIEWSTATE"] = viewstate["value"] if viewstate else ""
        payload["__VIEWSTATEGENERATOR"] = viewstategen["value"] if viewstategen else ""
        if eventvalidation:
            payload["__EVENTVALIDATION"] = eventvalidation["value"]

        # Add account details
        payload["dnn$ctr818$View$ctl00$username"] = username
        payload["dnn$ctr818$View$ctl00$password"] = password

        # Send POST request for login
        res_post = session.post(url, headers=headers, data=payload, verify=False)
        time.sleep(1)
        res_post.raise_for_status()
        soup = BeautifulSoup(res_post.text, "html.parser")

        # Check for pageRedirect
        if "pageRedirect" in res_post.text:
            # Extract and decode redirect URL
            lines = res_post.text.split("|")
            if "pageRedirect" in lines:
                idx = lines.index("pageRedirect")
                redirect_url_encoded = lines[idx + 2]
                redirect_url = urllib.parse.unquote(redirect_url_encoded)
                print(f"üîÅ Redirect to: {redirect_url}")

                # Get the redirected page
                res_final = session.get(redirect_url, headers=headers, verify=False)
                time.sleep(0.5)
                res_final.raise_for_status()

                # Navigate to syllabus page
                syllabus_url = "https://due.udn.vn/vi-vn/syllsvcq"
                res_syllabus = session.get(syllabus_url, headers=headers, verify=False)
                time.sleep(0.5)
                res_syllabus.raise_for_status()
                soup_syllabus = BeautifulSoup(res_syllabus.text, "html.parser")

                # Extract student information for info.txt
                home_info = {
                    " - H·ªô kh·∫©u th∆∞·ªùng tr√∫ - ƒê·ªãa ch·ªâ": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHKTT_DiaChi"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHKTT_DiaChi"}) else "N/A",
                    " - T·ªânh/Th√†nh ph·ªë": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHKTT_ThanhPho"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHKTT_ThanhPho"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHKTT_ThanhPho"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Qu·∫≠n/Huy·ªán": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_combHKTT_Huyen"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_combHKTT_Huyen"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_combHKTT_Huyen"}).find("option", {"selected": "selected"}) else "N/A",
                    " - X√£/Ph∆∞·ªùng": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_combHKTT_Xa"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_combHKTT_Xa"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_combHKTT_Xa"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Th√¥n/X√≥m": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHKTT_ThonXom"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHKTT_ThonXom"}) else "N/A"
                }
                home_info_2 = {
                    " - ƒê·ªãa ch·ªâ": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_DiaChi"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_DiaChi"}) else "N/A",
                    " - T·ªânh/Th√†nh ph·ªë": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropTTTV_ThanhPho"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropTTTV_ThanhPho"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropTTTV_ThanhPho"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Qu·∫≠n/Huy·ªán": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_QuanHuyen"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_QuanHuyen"}) else "N/A",
                    " - X√£/Ph∆∞·ªùng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_XaPhuong"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_XaPhuong"}) else "N/A",
                    " - Th√¥n/X√≥m": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_ThonXom"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTTTV_ThonXom"}) else "N/A"
                }
                noti_school_info = {
                    " - ƒê·ªãa ch·ªâ": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_DIACHI"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_DIACHI"}) else "N/A",
                    " - T·ªânh/Th√†nh ph·ªë": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropGUIGIAYBAO_TINH_THANHPHO"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropGUIGIAYBAO_TINH_THANHPHO"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropGUIGIAYBAO_TINH_THANHPHO"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Qu·∫≠n/Huy·ªán": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_QUANHUYEN"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_QUANHUYEN"}) else "N/A",
                    " - X√£/Ph∆∞·ªùng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_XA_PHUONG"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_XA_PHUONG"}) else "N/A",
                    " - Th√¥n/X√≥m": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_THON_XOM"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtGUIGIAYBAO_THON_XOM"}) else "N/A"
                }
                student_info = {
                    " - M√£ sinh vi√™n": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblMaSinhVien"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblMaSinhVien"}) else "N/A",
                    " - H·ªç v√† t√™n": f"{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtHolot'}).get('value', '').strip()} {soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtTen'}).get('value', '').strip()}".strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHolot"}) and soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTen"}) else "N/A",
                    " - Ng√†y sinh": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgaysinh"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgaysinh"}) else "N/A",
                    " - Gi·ªõi t√≠nh": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dopPhai"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dopPhai"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dopPhai"}).find("option", {"selected": "selected"}) else "N/A",
                    " - N∆°i sinh": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropNoisinh"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropNoisinh"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropNoisinh"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Email sinh vi√™n": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEMAIL_SV"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEMAIL_SV"}) else "N/A",
                    " - Email Tr∆∞·ªùng c·∫•p": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail"}) else "N/A",
                    " - M√£ s·ªë th·∫ª BHYT": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_MA_SO_THE"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_MA_SO_THE"}) else "N/A",
                    " - N∆°i ƒêK KCB Bƒê": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_NOI_DKY_KCB"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_NOI_DKY_KCB"}) else "N/A",
                    " - M√£ kh√°m ch·ªØa b·ªánh": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_MA_KHAM_CHUA_BENH"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_MA_KHAM_CHUA_BENH"}) else "N/A",
                    " - Gi√° tr·ªã s·ª≠ d·ª•ng BHYT": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_GIA_TRI_SU_DUNG"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtBHYT_GIA_TRI_SU_DUNG"}) else "N/A",
                    " - ƒê∆°n v·ªã c√¥ng t√°c": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDonvicongtac"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDonvicongtac"}) else "N/A",
                    " - Chuy√™n ng√†nh": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblMajorName"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblMajorName"}) else "N/A",
                    " - L·ªõp": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblClassID"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblClassID"}) else "N/A",
                    " - Di ƒë·ªông": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDienthoaiDD"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDienthoaiDD"}) else "N/A",
                    " - Nh√† ri√™ng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDienthoaiNR"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDienthoaiNR"}) else "N/A",
                    " - C∆° quan": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDienthoaiCQ"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDienthoaiCQ"}) else "N/A",
                    " - Khi c·∫ßn b√°o tin cho": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtKhicanbaotincho"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtKhicanbaotincho"}) else "N/A",
                    " - Qu·ªëc t·ªãch": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichSV"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichSV"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichSV"}).find("option", {"selected": "selected"}) else "N/A",
                    " - D√¢n t·ªôc": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantoc"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantoc"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantoc"}).find("option", {"selected": "selected"}) else "N/A",
                    " - T√¥n gi√°o": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropTongiao"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropTongiao"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropTongiao"}).find("option", {"selected": "selected"}) else "N/A",
                    " - T√™n tr∆∞·ªùng THPT": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTHPT_TEN_TRUONG"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTHPT_TEN_TRUONG"}) else "N/A",
                    " - ƒê·ªãa ch·ªâ tr∆∞·ªùng THPT": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTHPT_DIA_CHI_TRUONG"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtTHPT_DIA_CHI_TRUONG"}) else "N/A",
                }
                paper_info = {
                    " - S·ªë CMND": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCMND"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCMND"}) else "N/A",
                    " - Ng√†y c·∫•p CMND": f"{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtNgayCap'}).get('value', '').strip()}/{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtThangCap'}).get('value', '').strip()}/{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtNamCap'}).get('value', '').strip()}" if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgayCap"}) and soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtThangCap"}) and soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNamCap"}) else "N/A",
                    " - N∆°i c·∫•p CMND": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNoicap"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNoicap"}) else "N/A",
                    "\n - S·ªë CCCD": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtSoCCCD"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtSoCCCD"}) else "N/A",
                    " - Ng√†y c·∫•p CCCD": f"{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtCCCD_NgayCap'}).get('value', '').strip()}/{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtCCCD_ThangCap'}).get('value', '').strip()}/{soup_syllabus.find('input', {'id': 'dnn_ctr11233_View_txtCCCD_NamCap'}).get('value', '').strip()}" if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCCCD_NgayCap"}) and soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCCCD_ThangCap"}) and soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCCCD_NamCap"}) else "N/A",
                    " - N∆°i c·∫•p CCCD": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCCCD_NoiCap"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtCCCD_NoiCap"}) else "N/A",
                    " - NƒÉm t·ªët nghi·ªáp": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNamtotnghiep"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNamtotnghiep"}) else "N/A",
                    " - Ng√†y k√Ω b·∫±ng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgaykybang"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgaykybang"}) else "N/A",
                    " - Ng∆∞·ªùi k√Ω b·∫±ng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNguoikybang"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNguoikybang"}) else "N/A",
                    " - S·ªë hi·ªáu b·∫±ng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtSohieubang"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtSohieubang"}) else "N/A",
                    " - Ki·ªÉm tra b·∫±ng t·ªët nghi·ªáp": soup_syllabus.find("label", {"for": "dnn_ctr11233_View_radKiemtrabangTN_0"}).text.strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_radKiemtrabangTN_0"}) and soup_syllabus.find("input", {"id": "dnn_ctr11233_View_radKiemtrabangTN_0"}).get("checked") else "N/A"
                }
                family_info = {
                    "Cha\n - H·ªç v√† t√™n Cha": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHovatenCha"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHovatenCha"}) else "N/A",
                    " - D√¢n t·ªôc Cha": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocCha"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocCha"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocCha"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Qu·ªëc t·ªãch Cha": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichCha"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichCha"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichCha"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Ngh·ªÅ nghi·ªáp Cha": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNghenghiepCha"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNghenghiepCha"}) else "N/A",
                    " - ƒê·ªãa ch·ªâ email Cha": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail_Cha"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail_Cha"}) else "N/A",
                    " - H·ªô kh·∫©u th∆∞·ªùng tr√∫ Cha": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHokhauthuongtruCha"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHokhauthuongtruCha"}) else "N/A",
                    " - ƒêi·ªán tho·∫°i Cha": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDIEN_THOAI_CHA"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDIEN_THOAI_CHA"}) else "N/A",
                    " - H·ªçc v·∫•n Cha": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHOC_VAN_CHA"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHOC_VAN_CHA"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHOC_VAN_CHA"}).find("option", {"selected": "selected"}) else "N/A",
                    "\nM·∫π\n - H·ªç v√† t√™n M·∫π": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHovatenMe"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHovatenMe"}) else "N/A",
                    " - D√¢n t·ªôc M·∫π": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocMe"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocMe"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocMe"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Qu·ªëc t·ªãch M·∫π": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichMe"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichMe"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichMe"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Ngh·ªÅ nghi·ªáp M·∫π": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNghenghiepMe"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNghenghiepMe"}) else "N/A",
                    " - ƒê·ªãa ch·ªâ email M·∫π": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail_Me"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail_Me"}) else "N/A",
                    " - H·ªô kh·∫©u th∆∞·ªùng tr√∫ M·∫π": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHokhauthuongtruMe"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHokhauthuongtruMe"}) else "N/A",
                    " - ƒêi·ªán tho·∫°i M·∫π": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDIEN_THOAI_ME"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtDIEN_THOAI_ME"}) else "N/A",
                    " - H·ªçc v·∫•n M·∫π": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHOC_VAN_ME"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHOC_VAN_ME"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropHOC_VAN_ME"}).find("option", {"selected": "selected"}) else "N/A",
                    "\nV·ª£/Ch·ªìng\n - H·ªç v√† t√™n V·ª£/Ch·ªìng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHovatenVC"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHovatenVC"}) else "N/A",
                    " - D√¢n t·ªôc V·ª£/Ch·ªìng": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocVC"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocVC"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropDantocVC"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Qu·ªëc t·ªãch V·ª£/Ch·ªìng": soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichVC"}).find("option", {"selected": "selected"}).text.strip() if soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichVC"}) and soup_syllabus.find("select", {"id": "dnn_ctr11233_View_dropQuoctichVC"}).find("option", {"selected": "selected"}) else "N/A",
                    " - Ngh·ªÅ nghi·ªáp V·ª£/Ch·ªìng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgheNghepVC"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtNgheNghepVC"}) else "N/A",
                    " - ƒê·ªãa ch·ªâ email V·ª£/Ch·ªìng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail_VC"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtEmail_VC"}) else "N/A",
                    " - H·ªô kh·∫©u th∆∞·ªùng tr√∫ V·ª£/Ch·ªìng": soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHokhauthuongtruVC"}).get("value", "").strip() if soup_syllabus.find("input", {"id": "dnn_ctr11233_View_txtHokhauthuongtruVC"}) else "N/A"
                }
                cv_info = {
                    "M√£ sinh vi√™n": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblMA_SINH_VIEN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblMA_SINH_VIEN"}) else "N/A",
                    "H·ªç t√™n": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_VA_TEN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_VA_TEN"}) else "N/A",
                    "Ng√†y sinh": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGAY_SINH"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGAY_SINH"}) else "N/A",
                    "Gi·ªõi t√≠nh": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGIOI_TINH"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGIOI_TINH"}) else "N/A",
                    "N∆°i sinh (t·ªânh/TP)": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNOI_SINH_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNOI_SINH_SV"}) else "N/A",
                    "Qu·ªëc t·ªãch": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblQUOC_TICH_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblQUOC_TICH_SV"}) else "N/A",
                    "D√¢n t·ªôc": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDAN_TOC"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDAN_TOC"}) else "N/A",
                    "T√¥n gi√°o": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTON_GIAO"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTON_GIAO"}) else "N/A",
                    "S·ªë ƒëi·ªán tho·∫°i SV": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDIEN_THOAI_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDIEN_THOAI_SV"}) else "N/A",
                    "Email": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblEMAIL_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblEMAIL_SV"}) else "N/A",
                    "Khi c·∫ßn, b√°o tin cho s·ªë ƒëi·ªán tho·∫°i": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblBAO_TIN_CHO_GDINH"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblBAO_TIN_CHO_GDINH"}) else "N/A",
                    "Chuy√™n ng√†nh": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCHUYEN_NGANH"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCHUYEN_NGANH"}) else "N/A",
                    "L·ªõp": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblLOP"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblLOP"}) else "N/A",
                    "S·ªë CMND": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCMND_SO"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCMND_SO"}) else "N/A",
                    "Ng√†y c·∫•p CMND": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCMND_NGAY_CAP"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCMND_NGAY_CAP"}) else "N/A",
                    "N∆°i c·∫•p CMND": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCMND_NOI_CAP"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCMND_NOI_CAP"}) else "N/A",
                    "S·ªë CCCD": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCCCD_SO_IN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCCCD_SO_IN"}) else "N/A",
                    "Ng√†y c·∫•p CCCD": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCCCD_NGAYCAP_IN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCCCD_NGAYCAP_IN"}) else "N/A",
                    "N∆°i c·∫•p CCCD": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCCCD_NOICAP_IN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblCCCD_NOICAP_IN"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ - ƒê·ªãa ch·ªâ": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_DIA_CHI_NHA_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_DIA_CHI_NHA_SV"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ - T·ªânh/Th√†nh ph·ªë": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_THANH_PHO_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_THANH_PHO_SV"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ - Qu·∫≠n/Huy·ªán": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_QUAN_HUYEN_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_QUAN_HUYEN_SV"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ - X√£/Ph∆∞·ªùng": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_XA_PHUONG"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_XA_PHUONG"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ - Th√¥n/X√≥m": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_THON_XOM"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHKTT_THON_XOM"}) else "N/A",
                    "T·∫°m tr√∫ - T·∫°m v·∫Øng - ƒê·ªãa ch·ªâ": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_DIA_CHI_NHA_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_DIA_CHI_NHA_SV"}) else "N/A",
                    "T·∫°m tr√∫ - T·∫°m v·∫Øng - T·ªânh/Th√†nh ph·ªë": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_THANH_PHO_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_THANH_PHO_SV"}) else "N/A",
                    "T·∫°m tr√∫ - T·∫°m v·∫Øng - Qu·∫≠n/Huy·ªán": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_QUAN_HUYEN_SV"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_QUAN_HUYEN_SV"}) else "N/A",
                    "T·∫°m tr√∫ - T·∫°m v·∫Øng - X√£/Ph∆∞·ªùng": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_XA_PHUONG"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_XA_PHUONG"}) else "N/A",
                    "T·∫°m tr√∫ - T·∫°m v·∫Øng - Th√¥n/X√≥m": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_THON_XOM"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblTTTV_THON_XOM"}) else "N/A",
                    "ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - ƒê·ªãa ch·ªâ": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_DIACHI"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_DIACHI"}) else "N/A",
                    "ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - T·ªânh/Th√†nh ph·ªë": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_TINH_THANHPHO"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_TINH_THANHPHO"}) else "N/A",
                    "ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - Qu·∫≠n/Huy·ªán": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_QUANHUYEN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_QUANHUYEN"}) else "N/A",
                    "ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - X√£/Ph∆∞·ªùng": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_XA_PHUONG"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_XA_PHUONG"}) else "N/A",
                    "ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - Th√¥n/X√≥m": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_THON_XOM"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblGUIGIAYBAO_THON_XOM"}) else "N/A",
                    "H·ªç t√™n Cha": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_VA_TEN_CHA"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_VA_TEN_CHA"}) else "N/A",
                    "Email Cha": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblEMAIL_CHA"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblEMAIL_CHA"}) else "N/A",
                    "S·ªë ƒëi·ªán tho·∫°i Cha": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDIEN_THOAI_CHA"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDIEN_THOAI_CHA"}) else "N/A",
                    "Ngh·ªÅ nghi·ªáp Cha": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGHE_NGHIEP_CHA"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGHE_NGHIEP_CHA"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ Cha": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_KHAU_CHA"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_KHAU_CHA"}) else "N/A",
                    "H·ªçc v·∫•n Cha": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHOC_VAN_CHA"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHOC_VAN_CHA"}) else "N/A",
                    "H·ªç t√™n M·∫π": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_VA_TEN_ME"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_VA_TEN_ME"}) else "N/A",
                    "Email M·∫π": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblEMAIL_ME"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblEMAIL_ME"}) else "N/A",
                    "S·ªë ƒëi·ªán tho·∫°i M·∫π": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDIEN_THOAI_ME"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblDIEN_THOAI_ME"}) else "N/A",
                    "Ngh·ªÅ nghi·ªáp M·∫π": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGHE_NGHIEP_ME"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGHE_NGHIEP_ME"}) else "N/A",
                    "H·ªô kh·∫©u th∆∞·ªùng tr√∫ M·∫π": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_KHAU_ME"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHO_KHAU_ME"}) else "N/A",
                    "H·ªçc v·∫•n M·∫π": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHOC_VAN_ME"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblHOC_VAN_ME"}) else "N/A",
                    "Ng√†y in": soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGAY_IN"}).text.strip() if soup_syllabus.find("span", {"id": "dnn_ctr11233_View_lblNGAY_IN"}) else "N/A"
                }

                # Create full name for directory
                full_name = student_info[" - H·ªç v√† t√™n"].strip()
                directory = f"data/{full_name}"
                os.makedirs(directory, exist_ok=True)

                # Save info to file
                info_file_path = f"{directory}/info.txt"
                with open(info_file_path, "w", encoding="utf-8") as f:
                    f.write("### üè† Th√¥ng tin sinh vi√™n\n\n")
                    for label, value in student_info.items():
                        f.write(f"{label}: {value}\n")
                    
                    f.write("\n### üè† Th√¥ng tin gi·∫•y t·ªù\n\n")
                    for label, value in paper_info.items():
                        f.write(f"{label}: {value}\n")
                    
                    f.write("\n### üè† Th√¥ng tin th∆∞·ªùng tr√∫\n\n")
                    for label, value in home_info.items():
                        f.write(f"{label}: {value}\n")
                        
                    f.write("\n### üè† Th√¥ng tin t·∫°m tr√∫\n\n")
                    for key, value in home_info_2.items():
                        f.write(f"{key}: {value}\n")

                    f.write("\n### üè† Th√¥ng tin n∆°i nh·∫≠n th√¥ng b√°o\n\n")
                    for key, value in noti_school_info.items():
                        f.write(f"{key}: {value}\n")
                    
                    f.write("\n### üè† Th√¥ng tin gia ƒë√¨nh\n\n")
                    for key, value in family_info.items():
                        f.write(f"{key}: {value}\n")
                
                cv_file_path = f"{directory}/cv.txt"
                with open(cv_file_path, "w", encoding="utf-8") as f:
                    f.write("ƒê·∫†I H·ªåC ƒê√Ä N·∫¥NG\n".center(80))
                    f.write("TR∆Ø·ªúNG ƒê·∫†I H·ªåC KINH T·∫æ\n".center(80))
                    f.write("-" * 40 + "\n".center(80))
                    f.write("S∆† Y·∫æU L√ù L·ªäCH SINH VI√äN\n".center(80))
                    f.write("\n")
                    f.write("I. PH·∫¶N B·∫¢N TH√ÇN SINH VI√äN\n")
                    f.write("-" * 80 + "\n")
                    f.write(f"{'M√£ sinh vi√™n':<30}: {cv_info['M√£ sinh vi√™n']}\n")
                    f.write(f"{'H·ªç t√™n':<30}: {cv_info['H·ªç t√™n']}\n")
                    f.write(f"{'Ng√†y sinh':<30}: {cv_info['Ng√†y sinh']}\n")
                    f.write(f"{'Gi·ªõi t√≠nh':<30}: {cv_info['Gi·ªõi t√≠nh']}\n")
                    f.write(f"{'N∆°i sinh (t·ªânh/TP)':<30}: {cv_info['N∆°i sinh (t·ªânh/TP)']}\n")
                    f.write(f"{'Qu·ªëc t·ªãch':<30}: {cv_info['Qu·ªëc t·ªãch']}\n")
                    f.write(f"{'D√¢n t·ªôc':<30}: {cv_info['D√¢n t·ªôc']}\n")
                    f.write(f"{'T√¥n gi√°o':<30}: {cv_info['T√¥n gi√°o']}\n")
                    f.write(f"{'S·ªë ƒëi·ªán tho·∫°i SV':<30}: {cv_info['S·ªë ƒëi·ªán tho·∫°i SV']}\n")
                    f.write(f"{'Email':<30}: {cv_info['Email']}\n")
                    f.write(f"{'Khi c·∫ßn, b√°o tin cho s·ªë ƒëi·ªán tho·∫°i':<30}: {cv_info['Khi c·∫ßn, b√°o tin cho s·ªë ƒëi·ªán tho·∫°i']}\n")
                    f.write(f"{'Chuy√™n ng√†nh':<30}: {cv_info['Chuy√™n ng√†nh']}\n")
                    f.write(f"{'L·ªõp':<30}: {cv_info['L·ªõp']}\n")
                    f.write(f"{'S·ªë CMND':<30}: {cv_info['S·ªë CMND']}\n")
                    f.write(f"{'Ng√†y c·∫•p CMND':<30}: {cv_info['Ng√†y c·∫•p CMND']}\n")
                    f.write(f"{'N∆°i c·∫•p CMND':<30}: {cv_info['N∆°i c·∫•p CMND']}\n")
                    f.write(f"{'S·ªë CCCD':<30}: {cv_info['S·ªë CCCD']}\n")
                    f.write(f"{'Ng√†y c·∫•p CCCD':<30}: {cv_info['Ng√†y c·∫•p CCCD']}\n")
                    f.write(f"{'N∆°i c·∫•p CCCD':<30}: {cv_info['N∆°i c·∫•p CCCD']}\n")
                    f.write("\nH·ªò KH·∫®U TH∆Ø·ªúNG TR√ö\n")
                    f.write("-" * 80 + "\n")
                    f.write(f"{'ƒê·ªãa ch·ªâ (s·ªë nh√†, ƒë∆∞·ªùng)':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ - ƒê·ªãa ch·ªâ']}\n")
                    f.write(f"{'T·ªânh/Th√†nh ph·ªë':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ - T·ªânh/Th√†nh ph·ªë']}\n")
                    f.write(f"{'Qu·∫≠n/Huy·ªán':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ - Qu·∫≠n/Huy·ªán']}\n")
                    f.write(f"{'X√£/Ph∆∞·ªùng':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ - X√£/Ph∆∞·ªùng']}\n")
                    f.write(f"{'Th√¥n/X√≥m':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ - Th√¥n/X√≥m']}\n")
                    f.write("\nT·∫†M TR√ö - T·∫†M V·∫ÆNG\n")
                    f.write("-" * 80 + "\n")
                    f.write(f"{'ƒê·ªãa ch·ªâ (s·ªë nh√†, ƒë∆∞·ªùng)':<30}: {cv_info['T·∫°m tr√∫ - T·∫°m v·∫Øng - ƒê·ªãa ch·ªâ']}\n")
                    f.write(f"{'T·ªânh/Th√†nh ph·ªë':<30}: {cv_info['T·∫°m tr√∫ - T·∫°m v·∫Øng - T·ªânh/Th√†nh ph·ªë']}\n")
                    f.write(f"{'Qu·∫≠n/Huy·ªán':<30}: {cv_info['T·∫°m tr√∫ - T·∫°m v·∫Øng - Qu·∫≠n/Huy·ªán']}\n")
                    f.write(f"{'X√£/Ph∆∞·ªùng':<30}: {cv_info['T·∫°m tr√∫ - T·∫°m v·∫Øng - X√£/Ph∆∞·ªùng']}\n")
                    f.write(f"{'Th√¥n/X√≥m':<30}: {cv_info['T·∫°m tr√∫ - T·∫°m v·∫Øng - Th√¥n/X√≥m']}\n")
                    f.write("\nƒê·ªäA CH·ªà ƒê·ªÇ NH√Ä TR∆Ø·ªúNG G·ª¨I TH√îNG B√ÅO ƒê·∫æN GIA ƒê√åNH\n")
                    f.write("-" * 80 + "\n")
                    f.write(f"{'ƒê·ªãa ch·ªâ (s·ªë nh√†, ƒë∆∞·ªùng)':<30}: {cv_info['ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - ƒê·ªãa ch·ªâ']}\n")
                    f.write(f"{'T·ªânh/Th√†nh ph·ªë':<30}: {cv_info['ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - T·ªânh/Th√†nh ph·ªë']}\n")
                    f.write(f"{'Qu·∫≠n/Huy·ªán':<30}: {cv_info['ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - Qu·∫≠n/Huy·ªán']}\n")
                    f.write(f"{'X√£/Ph∆∞·ªùng':<30}: {cv_info['ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - X√£/Ph∆∞·ªùng']}\n")
                    f.write(f"{'Th√¥n/X√≥m':<30}: {cv_info['ƒê·ªãa ch·ªâ g·ª≠i th√¥ng b√°o - Th√¥n/X√≥m']}\n")
                    f.write("\nII. TH√ÄNH PH·∫¶N GIA ƒê√åNH\n")
                    f.write("-" * 80 + "\n")
                    f.write("CHA\n")
                    f.write(f"{'H·ªç t√™n':<30}: {cv_info['H·ªç t√™n Cha']}\n")
                    f.write(f"{'Email':<30}: {cv_info['Email Cha']}\n")
                    f.write(f"{'S·ªë ƒëi·ªán tho·∫°i':<30}: {cv_info['S·ªë ƒëi·ªán tho·∫°i Cha']}\n")
                    f.write(f"{'Ngh·ªÅ nghi·ªáp':<30}: {cv_info['Ngh·ªÅ nghi·ªáp Cha']}\n")
                    f.write(f"{'H·ªô kh·∫©u th∆∞·ªùng tr√∫':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ Cha']}\n")
                    f.write(f"{'H·ªçc v·∫•n':<30}: {cv_info['H·ªçc v·∫•n Cha']}\n")
                    f.write("\nM·∫∏\n")
                    f.write(f"{'H·ªç t√™n':<30}: {cv_info['H·ªç t√™n M·∫π']}\n")
                    f.write(f"{'Email':<30}: {cv_info['Email M·∫π']}\n")
                    f.write(f"{'S·ªë ƒëi·ªán tho·∫°i':<30}: {cv_info['S·ªë ƒëi·ªán tho·∫°i M·∫π']}\n")
                    f.write(f"{'Ngh·ªÅ nghi·ªáp':<30}: {cv_info['Ngh·ªÅ nghi·ªáp M·∫π']}\n")
                    f.write(f"{'H·ªô kh·∫©u th∆∞·ªùng tr√∫':<30}: {cv_info['H·ªô kh·∫©u th∆∞·ªùng tr√∫ M·∫π']}\n")
                    f.write(f"{'H·ªçc v·∫•n':<30}: {cv_info['H·ªçc v·∫•n M·∫π']}\n")
                    f.write("\n")
                    f.write("T√¥i xin cam ƒëoan nh·ªØng l·ªùi khai tr√™n l√† ƒë√∫ng s·ª± th·∫≠t. T√¥i xin ch·ªãu tr√°ch nhi·ªám theo Quy ch·∫ø hi·ªán h√†nh c·ªßa B·ªô Gi√°o d·ª•c v√† ƒê√†o t·∫°o, c·ªßa Tr∆∞·ªùng v·ªÅ l·ªùi khai c·ªßa t√¥i.\n")
                    f.write("\n")
                    f.write(f"{'ƒê√† N·∫µng,':<30} {cv_info['Ng√†y in']}\n")
                    f.write("K√Ω t√™n (k√Ω v√† ghi r√µ h·ªç t√™n)\n")
                    f.write(f"{'':<30} {cv_info['H·ªç t√™n']}\n")

                # Save syllabus page
                print("üìÑ Syllabus page title:", soup_syllabus.title.string if soup_syllabus.title else "No title")
                with open(f"{directory}/syllabus_page.html", "w", encoding="utf-8") as f:
                    f.write(soup_syllabus.prettify())
                time.sleep(1)
                print("‚úÖ Login successful.")
                print("üéØ Page title after login:", soup_syllabus.title.string if soup_syllabus.title else "No title")
                print(f"üìù Student info saved to: {info_file_path}")
                print(f"üìù CV info saved to: {cv_file_path}")
            else:
                print(f"‚ùå No pageRedirect found for {username}")
        else:
            print(f"‚ùå Login failed or no redirect for {username}")
    except Exception as e:
        print(f"‚ùå Error processing {username}: {str(e)}")
        continue

print("\n‚úÖ Finished processing all accounts.")